

###################################
##### Mailwitch configuration #####
###################################

# See http://www.postfix.org/postconf.5.html

### Basic administrative settings ###

# Needed at least level 2 (see postconf smtpd_relay_restrictions)
compatibility_level=2

# Biff notifications not necessary
biff = no

# No size limit for the mailboxes
mailbox_size_limit = 0

# Rather high size limit for messages but no limit for virtual mailbox
message_size_limit = 52428800
virtual_mailbox_limit = 0

# Need for local delivery
mailbox_command = procmail -a "$EXTENSION"

# Limit the number of concurrent processes; otherwise large mail distribution list will crash the system due to resource/memory limitations, i.e.
# the number of required sockets will be too high (netstat -uxpen) and the required memory will be to high
# default_process_limit = 100

# Uncomment the next line to generate "delayed mail" warnings
#delay_warning_time = 4h

### Domain/host related settings ###

# Destination must be empty so that virtual mail rewrite/delivery works
mydestination = localhost

# My domain and hostname should be mailwitch.com
mydomain = mailwitch.com
myhostname = mailwitch.com

# Postfix should forward mail from only the local machine; makes the setting in mynetworks irrelevant
mynetworks_style = host

# If mail is sent from localhost then $mydomain should be appended
myorigin = $mydomain

virtual_alias_domains = regexp:/etc/postfix/mailwitch/virtual_alias_domains.regexp

### Basic mapping relevant settings ###

# The recipient delimiter for splitting up mail like foo+bar@mailwitch.com
recipient_delimiter = +
# An unmatched foo+bar@mailwitch.com must not be expanded to foo+bar@gmail.com, etc. (raises also error "unreasonable virtual_alias_maps map nesting")
propagate_unmatched_extensions =

# Do not append a domain to mails without missing/incomplete domains
append_dot_mydomain = no

# Turn on canonical address rewriting for all mail (regardless where it is coming from)
local_header_rewrite_clients = static:all

### Relevant mappings ###

# Alias maps is not used
alias_maps = 

recipient_canonical_maps =
    # SRS unwrapping & domain forwarding
    regexp:/etc/postfix/mailwitch/recipient_canonical_maps.regexp,
    # Non virtual recipient redirects from the users
    pgsql:/etc/postfix/mailwitch/recipient_canonical_maps.pgsql

sender_canonical_maps =
    # Sender redirects from the users
    pgsql:/etc/postfix/mailwitch/sender_canonical_maps.pgsql

virtual_alias_maps =
    # Important direct redirects
    regexp:/etc/postfix/mailwitch/virtual_alias_maps.regexp,
    # All (virtual and non virtual) recipient redirects from the users
    pgsql:/etc/postfix/mailwitch/virtual_alias_maps.pgsql

# Canonical address rewrite only for envelope senders (this enables us the rewrite the envelope senders addresses differently from the rest)
canonical_classes = envelope_sender
# Rewrite the envelope sender addresses (eventually the srs wrapping of the addresses)
canonical_maps =
    # SRS wrapping
    regexp:/etc/postfix/mailwitch/envelope_sender_canonical_maps.regexp

# Relocated maps (currently not used yet)
relocated_maps = 
    # ,work (Currently not used)
    regexp:/etc/postfix/mailwitch/relocated_maps.regexp

### Spam rejection ###

# Rejection codes: make the rejection permenant
unknown_address_reject_code      = 554
unknown_hostname_reject_code     = 554
unknown_client_reject_code       = 554

# We want the other side to say hello
smtpd_helo_required = yes

# Helo restrictions
smtpd_helo_restrictions =
    # Allow localhost, etc.
    permit_mynetworks,
    # Reject if not a welformed hostname in helo
    reject_invalid_helo_hostname,
    # Reject if not a real hostname in helo
    reject_non_fqdn_helo_hostname,
    # Reject if the helo hostname does not have a dns a/mx record
    reject_unknown_helo_hostname,
    permit

# Client restrictions
smtpd_client_restrictions =
    # Allow localhost, etc.
    permit_mynetworks,
    # Reject if the other party talks to fast
    reject_unauth_pipelining,
    # Reject if the reverse dns and the ip do not fit
    reject_unknown_client_hostname,
    # Reject according to spamhaus.org backlist
    reject_rbl_client zen.spamhaus.org,
    permit

## Sender restrictions 

# reject_sender_login_mismatch based on dovecot authentication and the smtpd_sender_login_maps (see http://www.postfix.org/SASL_README.html)
# Oddly, in this documentation the check is done in smtpd_recipient_restrictions instead of smtpd_sender_restrictions 
smtpd_sender_restrictions = permit_mynetworks, reject_unknown_sender_domain, reject_sender_login_mismatch, permit

# The sender adresses mapped here will be guarded be sasl/devocot login, i.e. you will not be able to send emails 
# with senders listed here unless you are correctly authenticated
smtpd_sender_login_maps = pgsql:/etc/postfix/mailwitch/smtpd_sender_login_maps.pgsql


## TLS

# TLS parameters (based on https://www.kuketz-blog.de/postfix-ecdsa-rsa-keys-und-tls-konfiguration)
smtpd_tls_key_file = /etc/letsencrypt/live/mailwitch.com/privkey.pem
smtpd_tls_cert_file = /etc/letsencrypt/live/mailwitch.com/fullchain.pem
smtpd_tls_security_level = may
 
smtp_tls_key_file = /etc/letsencrypt/live/mailwitch.com/privkey.pem
smtp_tls_cert_file = /etc/letsencrypt/live/mailwitch.com/fullchain.pem
smtp_tls_security_level = may
 
# Add header
smtpd_tls_received_header = yes

# Log a little
smtpd_tls_loglevel = 1
smtp_tls_loglevel = 1

# The file with the certification authority certificates
smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt
smtpd_tls_CAfile = /etc/ssl/certs/ca-certificates.crt
tls_append_default_CA = yes
# Ask the communication partner for a certificate and validate it
smtpd_tls_ask_ccert = yes

# SSL/TLS protocols accepted by the Postfix SMTP client / Postfix SMTP server with TLS encryption
smtp_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1
smtp_tls_mandatory_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1
smtpd_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1
smtpd_tls_mandatory_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1

# SSL/TLS supported ciphers
smtp_tls_ciphers = high
smtp_tls_mandatory_ciphers = high
smtpd_tls_ciphers = high
smtpd_tls_mandatory_ciphers = high
tls_high_cipherlist = !aNULL:!eNULL:!CAMELLIA:HIGH:@STRENGTH

# Prefer the servers order of ciphers over clients
tls_preempt_cipherlist = yes

# Server security grade for ephemeral elliptic-curve Diffie-Hellman (EECDH) key exchange
smtpd_tls_eecdh_grade = ultra

# No SSL compression
tls_ssl_options = NO_COMPRESSION


## SASL/DOVECOT
# See http://www.postfix.org/SASL_README.html

smtpd_sasl_type = dovecot
smtpd_sasl_path = private/auth
smtpd_sasl_auth_enable = yes
#broken_sasl_auth_clients = yes


# Cache
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache


## SMTPD restrictions  (preliminary test for further smtpd restrictions; not used yet) ##
# smtpd_restriction_classes = RC_check_sender_access
# RC_check_sender_access = check_sender_access hash:/etc/postfix/mailwitch/_sender_access.hash
# smtpd_recipient_restrictions = permit_mynetworks, reject_unauth_destination, check_recipient_access hash:/etc/postfix/mailwitch/_recipient_access_per_user.hash


## Debugging ##

# Uncomment to enable debugging and restrict to localhost (i.e. especially do not allow traffic from the external ones)
#debug_peer_list = 127.0.0.0/8 [::1]/128 [fe80::]/64
#inet_interfaces = 127.0.0.0/8 [::1]/128 [fe80::]/64
